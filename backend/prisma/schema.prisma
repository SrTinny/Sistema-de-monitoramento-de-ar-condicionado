// prisma/schema.prisma
// Informa ao Prisma para criar o cliente que você usará no seu código Node.js
generator client {
  provider = "prisma-client-js"
}

// Informa ao Prisma como se conectar ao seu banco de dados
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define os modelos (tabelas) do banco de dados
enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String   // Armazene a senha hasheada
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Define a estrutura das suas tabelas no banco de dados
model AirConditioner {
  id             String   @id @default(cuid())
  deviceId       String   @unique // Gerado pelo sistema, ex: "AC-SALA101-aBcDeF"
  name           String   // Ex: "Ar Condicionado da Sala 101"
  room           String   // Ex: "Sala 101 Bloco A"
  
  // Dados de monitoramento (reportados pelo ESP32)
  status         String   @default("offline") // offline, desligado, ligado
  temperature    Float?   // O '?' significa que o campo é opcional (pode ser nulo)
  humidity       Float?   // Também opcional
  
  // Mecanismo de comando
  pendingCommand String?  // Guarda o próximo comando a ser executado: "ligar", "desligar"
  lastHeartbeat  DateTime? // Último momento em que o dispositivo reportou dados
  // Timestamps
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt // Atualizado automaticamente em cada alteração
}